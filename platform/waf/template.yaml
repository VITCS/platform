AWSTemplateFormatVersion: "2010-09-09"
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  EnvironmentName:
    Type: String
    Default: dev
    NoEcho: false
  RetentionInDays:
    Type: Number
    Default: 1
    Description: CloudWatch Logs retention period for Lambda functions    
  Scope:
    Type: String
    Default: REGIONAL
    NoEcho: false
    AllowedValues:
    - REGIONAL
    - CLOUDFRONT    
  EnableAWSManagedRulesSQLiRuleSetRule:
    Type: String
    Default: 'false'
    NoEcho: false
    AllowedValues:
    - 'true'
    - 'false'    
Conditions:
  AWSManagedRulesSQLiRuleSetEnabled:
    Fn::Equals:
    - EnableAWSManagedRulesSQLiRuleSetRule
    - 'true'
Resources:
  WAFLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub aws-waf-logs-${AWS::StackName}
      RetentionInDays: !Ref RetentionInDays
  LoggingConfiguration:
    Type: AWS::WAFv2::LoggingConfiguration
    Properties:
      ResourceArn: !GetAtt WAFWebACL.Arn
      LogDestinationConfigs:
      - !Select [0, !Split [':*', !GetAtt WAFLogGroup.Arn ]]
 
  WAFWebACL:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: !Ref AWS::StackName
      Description: 'Custom WAFWebACL'
      Scope: !Sub '${Scope}'
      VisibilityConfig: 
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: !Sub ${EnvironmentName}-WAFWebACL
      DefaultAction:
        Allow: {}
      Rules:
      - Name: AWSManagedRulesCommonRuleSet
        Priority: 1
        VisibilityConfig:
          SampledRequestsEnabled: true
          CloudWatchMetricsEnabled: true
          MetricName:
            Fn::Sub: "${EnvironmentName}-AWSManagedRulesCommonRuleSet"
        Statement:
          ManagedRuleGroupStatement:
            VendorName: AWS
            Name: AWSManagedRulesCommonRuleSet
        OverrideAction:
          Count: {}
      - Name: AWSManagedRulesKnownBadInputsRuleSet
        Priority: 3
        VisibilityConfig:
          SampledRequestsEnabled: true
          CloudWatchMetricsEnabled: true
          MetricName:
            Fn::Sub: "${EnvironmentName}-AWSManagedRulesKnownBadInputsRuleSet"
        Statement:
          ManagedRuleGroupStatement:
            VendorName: AWS
            Name: AWSManagedRulesKnownBadInputsRuleSet
        OverrideAction:
          Count: {}
      - Fn::If:
        - AWSManagedRulesSQLiRuleSetEnabled
        - Name: AWSManagedRulesSQLiRuleSet
          Priority: 2
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName:
              Fn::Sub: "${EnvironmentName}-AWSManagedRulesSQLiRuleSet"
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesSQLiRuleSet
          OverrideAction:
            Count: {}
        - Ref: AWS::NoValue
      - Name: AWSManagedRulesLinuxRuleSet
        Priority: 7
        VisibilityConfig:
          SampledRequestsEnabled: true
          CloudWatchMetricsEnabled: true
          MetricName:
            Fn::Sub: "${EnvironmentName}-AWSManagedRulesLinuxRuleSet"
        Statement:
          ManagedRuleGroupStatement:
            VendorName: AWS
            Name: AWSManagedRulesLinuxRuleSet
        OverrideAction:
          Count: {}
      - Name: AWSManagedRulesAmazonIpReputationList
        Priority: 6
        VisibilityConfig:
          SampledRequestsEnabled: true
          CloudWatchMetricsEnabled: true
          MetricName:
            Fn::Sub: "${EnvironmentName}-AWSManagedRulesAmazonIpReputationList"
        Statement:
          ManagedRuleGroupStatement:
            VendorName: AWS
            Name: AWSManagedRulesAmazonIpReputationList
        OverrideAction:
          Count: {}
      - Name: AWSManagedRulesAnonymousIpList
        Priority: 5
        VisibilityConfig:
          SampledRequestsEnabled: true
          CloudWatchMetricsEnabled: true
          MetricName:
            Fn::Sub: "${EnvironmentName}-AWSManagedRulesAnonymousIpList"
        Statement:
          ManagedRuleGroupStatement:
            VendorName: AWS
            Name: AWSManagedRulesAnonymousIpList
        OverrideAction:
          Count: {}
      - Name: AWSManagedRulesBotControlRuleSet
        Priority: 4
        VisibilityConfig:
          SampledRequestsEnabled: true
          CloudWatchMetricsEnabled: true
          MetricName:
            Fn::Sub: "${EnvironmentName}-AWSManagedRulesBotControlRuleSet"
        Statement:
          ManagedRuleGroupStatement:
            VendorName: AWS
            Name: AWSManagedRulesBotControlRuleSet
        OverrideAction:
          Count: {}         
      - Name: NonUSRequests
        Priority: 0
        VisibilityConfig:
          SampledRequestsEnabled: true
          CloudWatchMetricsEnabled: true
          MetricName:
            Fn::Sub: "${EnvironmentName}-GeoRestrictionRule"
        Statement:
          NotStatement:
            Statement:
              GeoMatchStatement:
                CountryCodes:
                  - US
        Action:
          Count: {}          