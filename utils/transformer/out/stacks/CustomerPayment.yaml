AWSTemplateFormatVersion: "2010-09-09"
Description: An auto-generated nested stack.
Metadata: {}
Parameters:
  DynamoDBModelTableReadIOPS:
    Type: Number
    Description: The number of read IOPS the table should support.
    Default: 5
  DynamoDBModelTableWriteIOPS:
    Type: Number
    Description: The number of write IOPS the table should support.
    Default: 5
  DynamoDBBillingMode:
    Type: String
    Description: >-
      Configure @model types to create DynamoDB tables with PAY_PER_REQUEST or
      PROVISIONED billing modes.
    Default: PAY_PER_REQUEST
    AllowedValues:
      - PAY_PER_REQUEST
      - PROVISIONED
  DynamoDBEnablePointInTimeRecovery:
    Type: String
    Description: Whether to enable Point in Time Recovery on the table
    Default: "false"
    AllowedValues:
      - "true"
      - "false"
  DynamoDBEnableServerSideEncryption:
    Type: String
    Description: Enable server side encryption powered by KMS.
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
  AppSyncApiName:
    Type: String
    Description: The name of the AppSync API
    Default: AppSyncSimpleTransform
  APIKeyExpirationEpoch:
    Type: Number
    Description: >-
      The epoch time in seconds when the API Key should expire. Setting this to
      0 will default to 7 days from the deployment date. Setting this to -1 will
      not create an API Key.
    Default: 0
    MinValue: -1
  CreateAPIKey:
    Type: Number
    Description: >-
      The boolean value to control if an API Key will be created or not. The
      value of the property is automatically set by the CLI. If the value is set
      to 0 no API Key will be created.
    Default: 0
    MinValue: 0
    MaxValue: 1
  AuthCognitoUserPoolId:
    Type: String
    Description: >-
      The id of an existing User Pool to connect. If this is changed, a user
      pool will not be created for you.
    Default: NONE
  ElasticSearchAccessIAMRoleName:
    Type: String
    Description: The name of the IAM role assumed by AppSync for Elasticsearch.
    Default: AppSyncElasticsearchRole
  ElasticSearchStreamingLambdaHandlerName:
    Type: String
    Description: The name of the lambda handler.
    Default: python_streaming_function.lambda_handler
  ElasticSearchStreamingLambdaRuntime:
    Type: String
    Description: >-
      The lambda runtime                
      (https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html#SSS-CreateFunction-request-Runtime)
    Default: python3.9
  ElasticSearchStreamingFunctionName:
    Type: String
    Description: The name of the streaming lambda function.
    Default: DdbToEsFn
  ElasticSearchStreamingIAMRoleName:
    Type: String
    Description: The name of the streaming lambda function IAM role.
    Default: SearchableLambdaIAMRole
  ElasticSearchDebugStreamingLambda:
    Type: Number
    Description: Enable debug logs for the Dynamo -> ES streaming lambda.
    Default: 1
    AllowedValues:
      - 0
      - 1
  ElasticSearchInstanceCount:
    Type: Number
    Description: The number of instances to launch into the Elasticsearch domain.
    Default: 1
  ElasticSearchInstanceType:
    Type: String
    Description: The type of instance to launch into the Elasticsearch domain.
    Default: t2.small.elasticsearch
    AllowedValues:
      - t2.small.elasticsearch
      - t2.medium.elasticsearch
      - c4.large.elasticsearch
      - c4.xlarge.elasticsearch
      - c4.2xlarge.elasticsearch
      - c4.4xlarge.elasticsearch
      - c4.8xlarge.elasticsearch
      - m3.medium.elasticsearch
      - m3.large.elasticsearch
      - m3.xlarge.elasticsearch
      - m3.2xlarge.elasticsearch
      - m4.large.elasticsearch
      - m4.xlarge.elasticsearch
      - m4.2xlarge.elasticsearch
      - m4.4xlarge.elasticsearch
      - m4.10xlarge.elasticsearch
      - r3.large.elasticsearch
      - r3.xlarge.elasticsearch
      - r3.2xlarge.elasticsearch
      - r3.4xlarge.elasticsearch
      - r3.8xlarge.elasticsearch
      - r4.large.elasticsearch
      - r4.xlarge.elasticsearch
      - r4.2xlarge.elasticsearch
      - r4.4xlarge.elasticsearch
      - r4.8xlarge.elasticsearch
      - r4.16xlarge.elasticsearch
      - i2.xlarge.elasticsearch
      - i2.2xlarge.elasticsearch
      - i3.large.elasticsearch
      - i3.xlarge.elasticsearch
      - i3.2xlarge.elasticsearch
      - i3.4xlarge.elasticsearch
      - i3.8xlarge.elasticsearch
      - i3.16xlarge.elasticsearch
  ElasticSearchEBSVolumeGB:
    Type: Number
    Description: The size in GB of the EBS volumes that contain our data.
    Default: 10
  env:
    Type: String
    Description: The environment name. e.g. Dev, Test, or Production
    Default: NONE
  S3DeploymentBucket:
    Type: String
    Description: The S3 bucket containing all deployment assets for the project.
  S3DeploymentRootKey:
    Type: String
    Description: >-
      An S3 key relative to the S3DeploymentBucket that points to the root of
      the deployment directory.
  AppSyncApiId:
    Type: String
    Description: The id of the AppSync API associated with this project.
  GetAttGraphQLAPIApiId:
    Type: String
    Description: >-
      Auto-generated parameter that forwards Fn.GetAtt(GraphQLAPI, ApiId)
      through to nested stacks.
Resources:
  CustomerPaymentTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::If:
          - HasEnvironmentParameter
          - Fn::Join:
              - "-"
              - - CustomerPayment
                - name: Ref
                  payload: GetAttGraphQLAPIApiId
                - Ref: env
          - Fn::Join:
              - "-"
              - - CustomerPayment
                - name: Ref
                  payload: GetAttGraphQLAPIApiId
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      BillingMode:
        Fn::If:
          - ShouldUsePayPerRequestBilling
          - PAY_PER_REQUEST
          - Ref: AWS::NoValue
      ProvisionedThroughput:
        Fn::If:
          - ShouldUsePayPerRequestBilling
          - Ref: AWS::NoValue
          - ReadCapacityUnits:
              Ref: DynamoDBModelTableReadIOPS
            WriteCapacityUnits:
              Ref: DynamoDBModelTableWriteIOPS
      SSESpecification:
        SSEEnabled:
          Fn::If:
            - ShouldUseServerSideEncryption
            - true
            - false
      PointInTimeRecoverySpecification:
        Fn::If:
          - ShouldUsePointInTimeRecovery
          - PointInTimeRecoveryEnabled: true
          - Ref: AWS::NoValue
      GlobalSecondaryIndexes:
        - IndexName: byCustomerProfileId
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            Fn::If:
              - ShouldUsePayPerRequestBilling
              - Ref: AWS::NoValue
              - ReadCapacityUnits:
                  Ref: DynamoDBModelTableReadIOPS
                WriteCapacityUnits:
                  Ref: DynamoDBModelTableWriteIOPS
    DeletionPolicy: Delete
  CustomerPaymentIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::If:
          - HasEnvironmentParameter
          - Fn::Join:
              - "-"
              - - CustomerPaymen883d82
                - role
                - name: Ref
                  payload: GetAttGraphQLAPIApiId
                - Ref: env
          - Fn::Join:
              - "-"
              - - CustomerPayment8c7468
                - role
                - name: Ref
                  payload: GetAttGraphQLAPIApiId
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                  - dynamodb:GetItem
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                Resource:
                  - Fn::Sub:
                      - >-
                        arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}
                      - tablename:
                          Fn::If:
                            - HasEnvironmentParameter
                            - Fn::Join:
                                - "-"
                                - - CustomerPayment
                                  - name: Ref
                                    payload: GetAttGraphQLAPIApiId
                                  - Ref: env
                            - Fn::Join:
                                - "-"
                                - - CustomerPayment
                                  - name: Ref
                                    payload: GetAttGraphQLAPIApiId
                  - Fn::Sub:
                      - >-
                        arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*
                      - tablename:
                          Fn::If:
                            - HasEnvironmentParameter
                            - Fn::Join:
                                - "-"
                                - - CustomerPayment
                                  - name: Ref
                                    payload: GetAttGraphQLAPIApiId
                                  - Ref: env
                            - Fn::Join:
                                - "-"
                                - - CustomerPayment
                                  - name: Ref
                                    payload: GetAttGraphQLAPIApiId
  CustomerPaymentDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        name: Ref
        payload: GetAttGraphQLAPIApiId
      Name: CustomerPaymentTable
      Type: AMAZON_DYNAMODB
      ServiceRoleArn:
        Fn::GetAtt:
          - CustomerPaymentIAMRole
          - Arn
      DynamoDBConfig:
        AwsRegion:
          Ref: AWS::Region
        TableName:
          Fn::If:
            - HasEnvironmentParameter
            - Fn::Join:
                - "-"
                - - CustomerPayment
                  - name: Ref
                    payload: GetAttGraphQLAPIApiId
                  - Ref: env
            - Fn::Join:
                - "-"
                - - CustomerPayment
                  - name: Ref
                    payload: GetAttGraphQLAPIApiId
    DependsOn:
      - CustomerPaymentIAMRole
  GetCustomerPaymentResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        name: Ref
        payload: GetAttGraphQLAPIApiId
      DataSourceName:
        Fn::GetAtt:
          - CustomerPaymentDataSource
          - Name
      FieldName: getCustomerPayment
      TypeName: Query
      RequestMappingTemplateS3Location:
        Fn::Sub:
          - >-
            s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}
          - S3DeploymentBucket:
              Ref: S3DeploymentBucket
            S3DeploymentRootKey:
              Ref: S3DeploymentRootKey
            ResolverFileName:
              Fn::Join:
                - .
                - - Query
                  - getCustomerPayment
                  - req
                  - vtl
      ResponseMappingTemplateS3Location:
        Fn::Sub:
          - >-
            s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}
          - S3DeploymentBucket:
              Ref: S3DeploymentBucket
            S3DeploymentRootKey:
              Ref: S3DeploymentRootKey
            ResolverFileName:
              Fn::Join:
                - .
                - - Query
                  - getCustomerPayment
                  - res
                  - vtl
  ListCustomerPaymentResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        name: Ref
        payload: GetAttGraphQLAPIApiId
      DataSourceName:
        Fn::GetAtt:
          - CustomerPaymentDataSource
          - Name
      FieldName: listCustomerPayments
      TypeName: Query
      RequestMappingTemplateS3Location:
        Fn::Sub:
          - >-
            s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}
          - S3DeploymentBucket:
              Ref: S3DeploymentBucket
            S3DeploymentRootKey:
              Ref: S3DeploymentRootKey
            ResolverFileName:
              Fn::Join:
                - .
                - - Query
                  - listCustomerPayments
                  - req
                  - vtl
      ResponseMappingTemplateS3Location:
        Fn::Sub:
          - >-
            s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}
          - S3DeploymentBucket:
              Ref: S3DeploymentBucket
            S3DeploymentRootKey:
              Ref: S3DeploymentRootKey
            ResolverFileName:
              Fn::Join:
                - .
                - - Query
                  - listCustomerPayments
                  - res
                  - vtl
  CreateCustomerPaymentResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        name: Ref
        payload: GetAttGraphQLAPIApiId
      DataSourceName:
        Fn::GetAtt:
          - CustomerPaymentDataSource
          - Name
      FieldName: createCustomerPayment
      TypeName: Mutation
      RequestMappingTemplateS3Location:
        Fn::Sub:
          - >-
            s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}
          - S3DeploymentBucket:
              Ref: S3DeploymentBucket
            S3DeploymentRootKey:
              Ref: S3DeploymentRootKey
            ResolverFileName:
              Fn::Join:
                - .
                - - Mutation
                  - createCustomerPayment
                  - req
                  - vtl
      ResponseMappingTemplateS3Location:
        Fn::Sub:
          - >-
            s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}
          - S3DeploymentBucket:
              Ref: S3DeploymentBucket
            S3DeploymentRootKey:
              Ref: S3DeploymentRootKey
            ResolverFileName:
              Fn::Join:
                - .
                - - Mutation
                  - createCustomerPayment
                  - res
                  - vtl
  UpdateCustomerPaymentResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        name: Ref
        payload: GetAttGraphQLAPIApiId
      DataSourceName:
        Fn::GetAtt:
          - CustomerPaymentDataSource
          - Name
      FieldName: updateCustomerPayment
      TypeName: Mutation
      RequestMappingTemplateS3Location:
        Fn::Sub:
          - >-
            s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}
          - S3DeploymentBucket:
              Ref: S3DeploymentBucket
            S3DeploymentRootKey:
              Ref: S3DeploymentRootKey
            ResolverFileName:
              Fn::Join:
                - .
                - - Mutation
                  - updateCustomerPayment
                  - req
                  - vtl
      ResponseMappingTemplateS3Location:
        Fn::Sub:
          - >-
            s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}
          - S3DeploymentBucket:
              Ref: S3DeploymentBucket
            S3DeploymentRootKey:
              Ref: S3DeploymentRootKey
            ResolverFileName:
              Fn::Join:
                - .
                - - Mutation
                  - updateCustomerPayment
                  - res
                  - vtl
  DeleteCustomerPaymentResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        name: Ref
        payload: GetAttGraphQLAPIApiId
      DataSourceName:
        Fn::GetAtt:
          - CustomerPaymentDataSource
          - Name
      FieldName: deleteCustomerPayment
      TypeName: Mutation
      RequestMappingTemplateS3Location:
        Fn::Sub:
          - >-
            s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}
          - S3DeploymentBucket:
              Ref: S3DeploymentBucket
            S3DeploymentRootKey:
              Ref: S3DeploymentRootKey
            ResolverFileName:
              Fn::Join:
                - .
                - - Mutation
                  - deleteCustomerPayment
                  - req
                  - vtl
      ResponseMappingTemplateS3Location:
        Fn::Sub:
          - >-
            s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}
          - S3DeploymentBucket:
              Ref: S3DeploymentBucket
            S3DeploymentRootKey:
              Ref: S3DeploymentRootKey
            ResolverFileName:
              Fn::Join:
                - .
                - - Mutation
                  - deleteCustomerPayment
                  - res
                  - vtl
  QueryCustomerPaymentByCustomerProfileIdResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        name: Ref
        payload: GetAttGraphQLAPIApiId
      DataSourceName:
        Fn::GetAtt:
          - CustomerPaymentDataSource
          - Name
      FieldName: CustomerPaymentByCustomerProfileId
      TypeName: Query
      RequestMappingTemplateS3Location:
        Fn::Sub:
          - >-
            s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}
          - S3DeploymentBucket:
              Ref: S3DeploymentBucket
            S3DeploymentRootKey:
              Ref: S3DeploymentRootKey
            ResolverFileName:
              Fn::Join:
                - .
                - - Query
                  - CustomerPaymentByCustomerProfileId
                  - req
                  - vtl
      ResponseMappingTemplateS3Location:
        Fn::Sub:
          - >-
            s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}
          - S3DeploymentBucket:
              Ref: S3DeploymentBucket
            S3DeploymentRootKey:
              Ref: S3DeploymentRootKey
            ResolverFileName:
              Fn::Join:
                - .
                - - Query
                  - CustomerPaymentByCustomerProfileId
                  - res
                  - vtl
Outputs:
  GetAttCustomerPaymentTableStreamArn:
    Description: Your DynamoDB table StreamArn.
    Value:
      Fn::GetAtt:
        - CustomerPaymentTable
        - StreamArn
    Export:
      Name:
        Fn::Join:
          - ":"
          - - Ref: AppSyncApiId
            - GetAtt
            - CustomerPaymentTable
            - StreamArn
  GetAttCustomerPaymentDataSourceName:
    Description: Your model DataSource name.
    Value:
      Fn::GetAtt:
        - CustomerPaymentDataSource
        - Name
    Export:
      Name:
        Fn::Join:
          - ":"
          - - Ref: AppSyncApiId
            - GetAtt
            - CustomerPaymentDataSource
            - Name
  GetAttCustomerPaymentTableName:
    Description: Your DynamoDB table name.
    Value:
      Ref: CustomerPaymentTable
    Export:
      Name:
        Fn::Join:
          - ":"
          - - Ref: AppSyncApiId
            - GetAtt
            - CustomerPaymentTable
            - Name
Mappings: {}
Conditions:
  ShouldUsePayPerRequestBilling:
    Fn::Equals:
      - Ref: DynamoDBBillingMode
      - PAY_PER_REQUEST
  ShouldUsePointInTimeRecovery:
    Fn::Equals:
      - Ref: DynamoDBEnablePointInTimeRecovery
      - "true"
  ShouldUseServerSideEncryption:
    Fn::Equals:
      - Ref: DynamoDBEnableServerSideEncryption
      - "true"
  ShouldCreateAPIKey:
    Fn::Equals:
      - Ref: CreateAPIKey
      - 1
  APIKeyExpirationEpochIsPositive:
    Fn::And:
      - Fn::Not:
          - Fn::Equals:
              - Ref: APIKeyExpirationEpoch
              - -1
      - Fn::Not:
          - Fn::Equals:
              - Ref: APIKeyExpirationEpoch
              - 0
  HasEnvironmentParameter:
    Fn::Not:
      - Fn::Equals:
          - Ref: env
          - NONE
