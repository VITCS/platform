version: 0.2
env:
  git-credential-helper: yes
phases:
  install:
    runtime-versions:
      nodejs: 16
      python: 3.9
    commands:
      # Install packages or any pre-reqs in this phase.
      # Upgrading SAM CLI to latest version
      - pip3 install --upgrade aws-sam-cli
      - python3 -m pip install --upgrade pip
      - pip3 install --force-reinstall "cryptography==38.0.4"
      - sam --version
      - TEMP_ROLE=$(aws sts assume-role --role-arn $ASSUME_ROLE_ARN --role-session-name prodplatform)
      - export TEMP_ROLE
      - export AWS_ACCESS_KEY_ID=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.AccessKeyId')
      - export AWS_SECRET_ACCESS_KEY=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SecretAccessKey')
      - export AWS_SESSION_TOKEN=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SessionToken')
      - export AWS_DEFAULT_REGION=${DEPLOY_REGION}
      # Installing project dependencies
      - cd platform
      # - npm install

  pre_build:
    commands:
      # Run tests, lint scripts or any other pre-build checks.
      #- npm run test

  build:
    commands:
      # Use Build phase to build your artifacts (compile, etc.)
      - cd eventbus && sam build -t template.yaml
      - cd ../elasticsearch && sam build -t template.yaml
      - cd ../users && sam build -t template.yaml
      - cd ../location && sam build -t template.yaml
      - cd ../customer-users && sam build -t template.yaml
      - cd ../ops-portal && sam build -t template.yaml
      - cd ../producer-users && sam build -t template.yaml
      # - cd ../internalOps && sam build -t template.yaml
      - cd ../waf && sam build -t template.yaml
      - cd ..

  post_build:
    commands:
      # Use Post-Build for notifications, git tags, upload artifacts to S3
      - cd eventbus && sam deploy -t template.yaml --s3-bucket ${DEPLOY_BUCKET} --region ${DEPLOY_REGION} --config-env ${env} --no-confirm-changeset --no-fail-on-empty-changeset
      - cd ../waf && sam deploy -t template.yaml --s3-bucket ${DEPLOY_BUCKET} --region ${DEPLOY_REGION} --config-env ${env} --no-confirm-changeset --no-fail-on-empty-changeset
      - cd ../elasticsearch && sam deploy -t template.yaml --s3-bucket ${DEPLOY_BUCKET} --region ${DEPLOY_REGION} --config-env ${env} --no-confirm-changeset --no-fail-on-empty-changeset
      - cd ../users && sam deploy -t template.yaml --s3-bucket ${DEPLOY_BUCKET} --region ${DEPLOY_REGION} --config-env ${env} --no-confirm-changeset --no-fail-on-empty-changeset
      - cd ../customer-users && sam deploy -t template.yaml --s3-bucket ${DEPLOY_BUCKET} --region ${DEPLOY_REGION} --config-env ${env} --no-confirm-changeset --no-fail-on-empty-changeset
      - cd ../location && sam deploy -t template.yaml --s3-bucket ${DEPLOY_BUCKET} --region ${DEPLOY_REGION} --config-env ${env} --no-confirm-changeset --no-fail-on-empty-changeset
      - cd ../ops-portal && sam deploy -t template.yaml --s3-bucket ${DEPLOY_BUCKET} --region ${DEPLOY_REGION} --config-env ${env} --no-confirm-changeset --no-fail-on-empty-changeset
      - cd ../producer-users && sam deploy -t template.yaml --s3-bucket ${DEPLOY_BUCKET} --region ${DEPLOY_REGION} --config-env ${env} --no-confirm-changeset --no-fail-on-empty-changeset
      # - cd ../internalOps && sam deploy -t template.yaml --s3-bucket ${DEPLOY_BUCKET} --region ${DEPLOY_REGION} --config-env ${env} --no-confirm-changeset --no-fail-on-empty-changeset
      - cd ../..
      - ls -ltr
      - unset AWS_ACCESS_KEY_ID
      - unset AWS_SECRET_ACCESS_KEY
      - unset AWS_SESSION_TOKEN
      - unset AWS_DEFAULT_REGION
      - git config --global --unset-all credential.helper
      - git config --global credential.helper '!aws codecommit credential-helper $@'
      - git config --global credential.UseHttpPath true
      - git clone --mirror https://git-codecommit.us-east-1.amazonaws.com/v1/repos/${REPO_NAME} LocalRepository
      - cd LocalRepository
      - git remote set-url --push origin https://git-codecommit.${BACKUP_REPO_REGION}.amazonaws.com/v1/repos/${REPO_NAME}
      - git config --global credential.helper '!aws codecommit credential-helper $@'
      - git config --global credential.UseHttpPath true
      - git fetch -p origin
      - git push --mirror
      - cd ..
      - rm -rf  LocalRepository
